# Deployment
apiVersion: apps/v1
kind: Deployment 
metadata:
  name: spyservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spyservice 
  template:
    metadata:
      labels: 
        app: spyservice 
    spec:
      serviceAccountName: spyservice-account
      terminationGracePeriodSeconds: 5
      volumes:
        - name: spyservice-account-secret
          secret:
            defaultMode: 420
            secretName: spyservice-account-secret
      containers:
      - name: spy-go-bumblebee
        image:  herochinese/go-bumblebee-spy:master
        env:
          - name: IN_CLUSTER_CONFIG
            value:  "true"
        ports:
          - name: http
            containerPort: 9041
        resources:
          requests: 
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
        volumeMounts:
          - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
            name: spyservice-account-secret
            readOnly: true


---
# Service 
apiVersion: v1
kind: Service
metadata:
  name: spyservice
spec: 
  type: ClusterIP
  selector:
    app: spyservice
  ports:
  - name: http
    port: 9041
    targetPort: 9041


---
# Service account for spyservice 
apiVersion: v1
kind: ServiceAccount
metadata:
  name: spyservice-account
automountServiceAccountToken: false

---
# Secret attach to service account 
apiVersion: v1
kind: Secret
metadata:
  name: spyservice-account-secret
  annotations: 
    kubernetes.io/service-account.name: spyservice-account
type: kubernetes.io/service-account-token


---
# Define role with necesary permissions
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: spyservice-role
  labels:
    app: spyservice
rules:
- apiGroups: [""]
  resources:
  - namespaces
  - nodes
  - services
  - endpoints
  - pods
  - nodes/proxy
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources:
  - configmaps
  verbs: ["get"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]

---
# Binding role with service account 
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: spyservice-role-binding
  labels:
    app: spyservice
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: spyservice-role
subjects:
- kind: ServiceAccount
  name: spyservice-account
  namespace: default